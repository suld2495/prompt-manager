// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Priority {
  critical
  warning
  info
}

model Rule {
  id                String   @id @default(uuid())
  name              String
  description       String?
  title             String
  priority          Priority @default(info)
  allowed           Boolean  @default(true)
  descriptionDetail String?
  exampleBad        String?
  exampleGood       String?
  violationAction   String?
  notes             String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // 카테고리 관계
  categoryRules CategoryRule[]

  @@map("rules")
}

// 카테고리 모델 (평면 구조)
model Category {
  id          String   @id @default(uuid())
  name        String
  description String?  @db.Text
  order       Int      @default(0)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 관계
  categoryRules  CategoryRule[]
  presetItems    CategoryPresetItem[]

  @@map("categories")
}

// 카테고리-규칙 연결 테이블 (다대다 + 순서)
model CategoryRule {
  id         String   @id @default(uuid())
  categoryId String   @map("category_id")
  ruleId     String   @map("rule_id")
  order      Int      @default(0)

  createdAt DateTime @default(now()) @map("created_at")

  // 관계
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  rule     Rule     @relation(fields: [ruleId], references: [id], onDelete: Cascade)

  @@unique([categoryId, ruleId])
  @@map("category_rules")
}

// 카테고리 프리셋 모델
model CategoryPreset {
  id          String   @id @default(uuid())
  name        String
  description String?  @db.Text

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // 관계
  presetItems CategoryPresetItem[]

  @@map("category_presets")
}

// 프리셋-카테고리 연결 테이블
model CategoryPresetItem {
  id         String   @id @default(uuid())
  presetId   String   @map("preset_id")
  categoryId String   @map("category_id")
  order      Int      @default(0)

  createdAt DateTime @default(now()) @map("created_at")

  // 관계
  preset   CategoryPreset @relation(fields: [presetId], references: [id], onDelete: Cascade)
  category Category       @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([presetId, categoryId])
  @@map("category_preset_items")
}
